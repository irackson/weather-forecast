{"version":3,"sources":["context/reducers.js","pages/GodMode.js","components/user/ThemeApplicator.js","components/weather/WeatherForecast.js","pages/Home.js","components/user/ThemeCustomizer.js","pages/Settings.js","App.js","utils/theme-helper.js","components/weather/WeatherData.js","components/weather/WeatherIcon.js","components/layout/Header.js","context/weatherDataSeed.js","context/styleSeed.js","reportWebVitals.js","index.js"],"names":["INCREMENT_TEMP","DECREMENT_TEMP","weatherReducer","state","action","type","index","data","updatedData","updatedItem","temp","incrementTemp","decrementTemp","CHANGE_THEME","themeReducer","selection","updatedCurrentTheme","otherThemes","find","theme","filter","unshift","currentTheme","changeTheme","UPDATE_USER_STYLE","styleReducer","formData","styles","updatedStyle","map","file","customizableComponents","comp","Object","keys","e","property","userPreference","path","name","updateStyleStateFromUserPreferenceForm","preferences","GodMode","props","useContext","DataContext","addOneToTemp","subtractOneFromTemp","id","WeatherIcon","img","WeatherData","conditions","time","onClick","to","ThemeApplicator","StyleContext","themes","updateThemeSelection","i","Div","styled","div","WeatherForecast","Section","section","Home","join","ThemeCustomizer","updateStyleFromForm","useForm","register","handleSubmit","watch","formState","errors","onSubmit","f","href","target","c","p","htmlFor","defaultValue","default","Settings","seed","require","weatherDataSeed","styleSeed","themeSeed","createContext","ThemeContext","App","useReducer","weatherState","dispatch","styleDispatch","themeState","themeDispatch","Provider","value","setTimeout","console","log","className","Header","exact","render","module","exports","getStyledCommands","mode","styledComponentNames","relativePath","styledCommands","properties","error","forEach","val","m","codeExpression","push","length","BoldSpan","span","BoldSpan_props","P","P_props","eval","message","Icon","Icon_props","SecretSection","SecretSection_props","src","HeaderContainer","header","HeaderContainer_props","themeA","themeB","border","color","width","height","outline","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec043806.chunk.js","sourcesContent":["//! weather reducer\nexport const INCREMENT_TEMP = 'INCREMENT_TEMP';\nexport const DECREMENT_TEMP = 'DECREMENT_TEMP';\n// I knew I could just pass -1 to increment instead\n// of having two cases, but I thought the less dry code\n// would be better practice\n\nconst incrementTemp = (index, data) => {\n    const updatedData = [...data];\n    const updatedItem = { ...updatedData[index] };\n    updatedItem.temp++;\n    updatedData[index] = updatedItem;\n    return updatedData;\n};\n\nconst decrementTemp = (index, data) => {\n    const updatedData = [...data];\n    const updatedItem = { ...updatedData[index] };\n    updatedItem.temp--;\n    updatedData[index] = updatedItem;\n    return updatedData;\n};\n\nexport const weatherReducer = (state, action) => {\n    switch (action.type) {\n        case INCREMENT_TEMP:\n            return incrementTemp(action.index, state);\n        case DECREMENT_TEMP:\n            return decrementTemp(action.index, state);\n        default:\n            return state;\n    }\n};\n\n//! theme reducer\nexport const CHANGE_THEME = 'CHANGE_THEME';\n\nconst changeTheme = (selection, data) => {\n    const updatedData = { ...data };\n\n    const updatedCurrentTheme = updatedData.otherThemes.find(\n        (theme) => theme === selection\n    );\n\n    updatedData.otherThemes = updatedData.otherThemes.filter(\n        (theme) => theme !== selection\n    );\n\n    updatedData.otherThemes.unshift(updatedData.currentTheme);\n    updatedData.currentTheme = updatedCurrentTheme;\n\n    return updatedData;\n};\n\nexport const themeReducer = (state, action) => {\n    switch (action.type) {\n        case CHANGE_THEME:\n            return changeTheme(action.selection, state);\n        default:\n            return state;\n    }\n};\n\n//! style reducer\nexport const UPDATE_USER_STYLE = 'UPDATE_USER_STYLE';\n\nconst updateStyleStateFromUserPreferenceForm = (formData, styles) => {\n    const updatedStyle = [...styles];\n    updatedStyle.map((file) => {\n        file.customizableComponents.map((comp) => {\n            // console.log(formData[`${file.path}`]);\n            Object.keys(comp)\n                .filter((e) => e !== 'name')\n                .map((property) => {\n                    // console.log('original', comp[property].userPreference);\n                    comp[property].userPreference =\n                        formData[file.path][comp.name][property];\n                    // const newPref = formData[file.path][comp.name][property];\n                    // console.log(newPref);\n                    // console.log('form', formData[file.path][comp][property]);\n                    // console.log('new', )\n                    return property;\n                });\n\n            return comp;\n        });\n\n        return file;\n    });\n\n    // updatedStyle[0].customizableComponents[0].color.userPreference =\n    //     formData['src/components/weather/WeatherData'].BoldSpan.color;\n    return updatedStyle;\n};\n\nexport const styleReducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_USER_STYLE:\n            return updateStyleStateFromUserPreferenceForm(\n                action.preferences,\n                state\n            );\n        default:\n            return state;\n    }\n};\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { DataContext } from 'App';\n\nimport WeatherData from 'components/weather/WeatherData';\nimport WeatherIcon from 'components/weather/WeatherIcon';\n\nexport default function GodMode(props) {\n    const { data, addOneToTemp, subtractOneFromTemp } = useContext(DataContext);\n    return (\n        <>\n            <h2>Edit Day {props.id + 1}</h2>{' '}\n            <WeatherIcon img={data[props.id].img}></WeatherIcon>\n            <WeatherData\n                conditions={data[props.id].conditions}\n                time={data[props.id].time}\n                temp={data[props.id].temp}\n            ></WeatherData>\n            <div>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        addOneToTemp(props.id);\n                    }}\n                >\n                    Increase Temp\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        subtractOneFromTemp(props.id);\n                    }}\n                >\n                    Decrease Temp\n                </button>\n            </div>\n            <footer>\n                <nav>\n                    <Link to=\"/\">\n                        <button>Return Home</button>\n                    </Link>\n                </nav>\n            </footer>\n        </>\n    );\n}\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyleContext } from 'App';\n\nfunction ThemeApplicator(props) {\n    const { styles, themes, updateThemeSelection } = useContext(StyleContext);\n    return (\n        <>\n            {themes.otherThemes.map((e, i) => (\n                <button\n                    type=\"button\"\n                    key={e}\n                    onClick={() => {\n                        updateThemeSelection(e);\n                    }}\n                >\n                    {e}\n                </button>\n            ))}\n        </>\n    );\n}\n\nexport default ThemeApplicator;\n","import styled from 'styled-components';\n\nimport WeatherData from 'components/weather/WeatherData';\nimport WeatherIcon from 'components/weather/WeatherIcon';\nimport { Link } from 'react-router-dom';\n\nconst Div = styled.div`\n    width: 10ch;\n    max-height: 15ch;\n`;\n\nfunction WeatherForecast({ id, img, conditions, time, temp }) {\n    return (\n        <Div>\n            <WeatherIcon img={img}></WeatherIcon>\n            <WeatherData\n                conditions={conditions}\n                time={time}\n                temp={temp}\n            ></WeatherData>\n            <Link to={`/${id + 1}`}>\n                <button>Enter God Mode</button>\n            </Link>\n        </Div>\n    );\n}\n\nexport default WeatherForecast;\n","import { DataContext } from 'App';\nimport ThemeApplicator from 'components/user/ThemeApplicator';\nimport WeatherForecast from 'components/weather/WeatherForecast';\nimport { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    row-gap: 1.5rem;\n`;\n\nexport default function Home(props) {\n    const { data } = useContext(DataContext);\n    return (\n        <>\n            <h2>5-day Forecast</h2>{' '}\n            <Section>\n                {data.map((e, i) => (\n                    <WeatherForecast\n                        key={i}\n                        id={i}\n                        img={e.img}\n                        conditions={e.conditions.join(', ')}\n                        time={e.time}\n                        temp={e.temp}\n                    ></WeatherForecast>\n                ))}\n            </Section>\n            <footer>\n                <h4>Pick your Theme</h4>\n\n                <ThemeApplicator></ThemeApplicator>\n                <nav>\n                    <Link to=\"/settings\">\n                        <button>Create / Manage your own Theme</button>\n                    </Link>\n                </nav>\n            </footer>\n        </>\n    );\n}\n","import { StyleContext } from 'App';\nimport { useContext } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport styled from 'styled-components';\n\nconst gitPath = 'https://github.com/irackson/weather-forecast/blob/main/';\n\nconst Div = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem;\n\n    > label {\n        font-size: 10px;\n    }\n`;\n\nfunction ThemeCustomizer(props) {\n    const {\n        styles,\n        updateStyleFromForm,\n        themes,\n        updateThemeSelection,\n    } = useContext(StyleContext);\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n    } = useForm();\n    const onSubmit = (data) => {\n        updateStyleFromForm(data);\n    };\n\n    // console.log('on load', styles);\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <section>\n                    {styles.map((file, f) => (\n                        <div key={f}>\n                            <fieldset name={file.path}>\n                                <legend>\n                                    <a\n                                        href={`${gitPath}/${file.path}.js`}\n                                        target=\"_\"\n                                    >\n                                        {file.path}\n                                    </a>\n                                </legend>\n\n                                {file.customizableComponents.map((comp, c) => (\n                                    <div key={`${f}.${c}`}>\n                                        <fieldset name={comp.name}>\n                                            <legend>{comp.name}</legend>\n\n                                            {Object.keys(comp)\n                                                .filter((e) => e !== 'name')\n                                                .map((property, p) => (\n                                                    <div key={`${f}.${c}.${p}`}>\n                                                        <Div>\n                                                            <label\n                                                                htmlFor={\n                                                                    property\n                                                                }\n                                                            >\n                                                                {property}\n                                                            </label>\n                                                            <input\n                                                                defaultValue={\n                                                                    comp[\n                                                                        property\n                                                                    ]\n                                                                        .userPreference\n                                                                        ? `${comp[property].userPreference}`\n                                                                        : comp[\n                                                                              property\n                                                                          ]\n                                                                              .default\n                                                                }\n                                                                {...register(\n                                                                    `${file.path}.${comp.name}.${property}`\n                                                                )}\n                                                            ></input>\n                                                        </Div>\n                                                    </div>\n                                                ))}\n                                        </fieldset>\n                                    </div>\n                                ))}\n                            </fieldset>\n                        </div>\n                    ))}\n                </section>\n                <input type=\"submit\" />\n            </form>\n        </>\n    );\n}\n\nexport default ThemeCustomizer;\n","import { StyleContext } from 'App';\nimport ThemeCustomizer from 'components/user/ThemeCustomizer';\nimport { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Settings(props) {\n    const { styles, themes, updateThemeSelection } = useContext(StyleContext);\n\n    return (\n        <>\n            <h2>Customize your Own Theme!</h2>{' '}\n            <ThemeCustomizer></ThemeCustomizer>\n            <footer>\n                <nav>\n                    <Link to=\"/\">\n                        <button>Return Home</button>\n                    </Link>\n                </nav>\n            </footer>\n        </>\n    );\n}\n\nexport default Settings;\n","import 'App.scss';\nimport Header from 'components/layout/Header';\nimport {\n    UPDATE_USER_STYLE,\n    styleReducer,\n    CHANGE_THEME,\n    themeReducer,\n    DECREMENT_TEMP,\n    INCREMENT_TEMP,\n    weatherReducer,\n} from 'context/reducers';\nimport GodMode from 'pages/GodMode';\nimport Home from 'pages/Home';\nimport Settings from 'pages/Settings';\nimport { createContext, useContext, useReducer } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\n//! import data\nconst { weatherDataSeed: seed } = require('context/weatherDataSeed');\nconst { styleSeed, themeSeed } = require('context/styleSeed');\n\nconst DataContext = createContext(seed);\nconst StyleContext = createContext(styleSeed);\nconst ThemeContext = createContext(themeSeed);\nexport default function App() {\n    //* weather data context & reducer stuff\n    const data = useContext(DataContext);\n    const [weatherState, dispatch] = useReducer(weatherReducer, data);\n\n    const addOneToTemp = (id) => {\n        setTimeout(() => {\n            dispatch({ type: INCREMENT_TEMP, index: id });\n        }, 1);\n    };\n\n    const subtractOneFromTemp = (id) => {\n        setTimeout(() => {\n            dispatch({ type: DECREMENT_TEMP, index: id });\n        }, 1);\n    };\n\n    //* style context & reducer stuff\n    const [styleState, styleDispatch] = useReducer(\n        styleReducer,\n        useContext(StyleContext)\n    );\n\n    const updateStyleFromForm = (formData) => {\n        // console.log('before', formData);\n        setTimeout(() => {\n            styleDispatch({ type: UPDATE_USER_STYLE, preferences: formData });\n        }, 1);\n        return;\n    };\n\n    //* theme context & reducer stuff\n    const [themeState, themeDispatch] = useReducer(\n        themeReducer,\n        useContext(ThemeContext)\n    );\n\n    const updateThemeSelection = (selection) => {\n        console.log('before', themeState.currentTheme);\n        if (themeState.currentTheme !== selection) {\n            setTimeout(() => {\n                themeDispatch({ type: CHANGE_THEME, selection: selection });\n            }, 1);\n            return;\n        }\n        return; // TODO: necessary?\n    };\n\n    return (\n        <StyleContext.Provider\n            value={{\n                styles: useContext(StyleContext), // TODO: swap to styleState after writing reducer\n                updateStyleFromForm,\n                themes: themeState,\n                updateThemeSelection,\n            }}\n        >\n            <div className=\"App\">\n                <Header />\n                <main>\n                    <DataContext.Provider\n                        value={{\n                            data: weatherState,\n                            addOneToTemp,\n                            subtractOneFromTemp,\n                        }}\n                    >\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={(props) => <Home {...props} />}\n                            ></Route>\n                            {data.map((e, i) => (\n                                <Route\n                                    key={i}\n                                    exact\n                                    path={`/${i + 1}`}\n                                    render={(props) => (\n                                        <GodMode {...props} id={i} />\n                                    )}\n                                ></Route>\n                            ))}\n                            <Route\n                                path=\"/settings\"\n                                render={(props) => <Settings {...props} />}\n                            ></Route>\n                            <Route render={() => <Redirect to=\"/\" />} />\n                        </Switch>\n                    </DataContext.Provider>\n                </main>\n            </div>\n        </StyleContext.Provider>\n    );\n}\n\nexport { DataContext, StyleContext, ThemeContext };\n","//*         __  ___  __        __  ___    __        __\n//* | |\\ | /__`  |  |__) |  | /  `  |  | /  \\ |\\ | /__`\n//* | | \\| .__/  |  |  \\ \\__/ \\__,  |  | \\__/ | \\| .__/\n\n// TODO: in each file that uses this util\n//! declare variables (ex...)\n//* in each component file\n// const relativePath = 'src/components/weather/WeatherIcon';\n//* add each styled component (with props) in the file to this array\n// const styledComponentNames = ['Icon', 'MySection'];\n//* instantiate an empty object for each (with props)\n// const Icon_props = {};\n// const MySection_props = {};\n\n// TODO: pass specific parameters to util\n//! relativePath, styledComponentNames\n//! also pass global state parameters -- mode, styles (ex...)\n// const mode = 'default';\n\n// TODO: expect an array of strings back\n//! loop over array and eval each to set styled props\n\n//*  __   __   __   ___\n//* /  ` /  \\ |  \\ |__\n//* \\__, \\__/ |__/ |___\n\nconst getStyledCommands = (\n    styles,\n    mode,\n    styledComponentNames,\n    relativePath\n) => {\n    let styledCommands = [];\n\n    const customizableComponents = styles.find((e) => e.path === relativePath)\n        .customizableComponents;\n\n    for (let i = 0; i < styledComponentNames.length; i++) {\n        let properties;\n        try {\n            properties = Object.keys(customizableComponents[i]).filter(\n                (e) => e !== 'name'\n            );\n        } catch (error) {\n            console.log('🚀 ~ file: theme-helper.js ~ line 113 ~ error', error);\n            continue;\n        }\n\n        properties.forEach((e, index) => {\n            const val =\n                customizableComponents[i][e][\n                    Object.keys(customizableComponents[i][e]).filter(\n                        (m) => m === mode\n                    )\n                ] || customizableComponents[i][e].default;\n            const codeExpression = `Object.defineProperty(${styledComponentNames[i]}_props, '${e}', {value : '${val}', writable: true})`;\n\n            styledCommands.push(codeExpression);\n        });\n    }\n    return styledCommands;\n};\n\nmodule.exports = {\n    getStyledCommands,\n};\n","import { StyleContext } from 'App';\nimport { useContext } from 'react';\nimport { getStyledCommands } from 'utils/theme-helper';\nimport styled from 'styled-components';\n\nconst relativePath = 'src/components/weather/WeatherData';\nconst styledComponentNames = ['BoldSpan', 'P'];\n\nconst BoldSpan = styled.span`\n    font-weight: bold;\n    padding-right: ${(props) => props.BoldSpan_props['padding-right']};\n    color: ${(props) => props.BoldSpan_props['color']};\n`;\nconst BoldSpan_props = {};\n\nconst P = styled.p`\n    margin: 0.5rem;\n    font-size: ${(props) => props.P_props['font-size']};\n    overflow: visible;\n    color: ${(props) => props.P_props['color']};\n`;\nconst P_props = {};\n\nfunction WeatherData({ conditions, time, temp }) {\n    const { styles, themes } = useContext(StyleContext);\n    console.log('on render', themes.currentTheme);\n    const styledCommands = getStyledCommands(\n        styles,\n        themes.currentTheme,\n        styledComponentNames,\n        relativePath\n    );\n    for (let i = 0; i < styledCommands.length; i++) {\n        try {\n            // eslint-disable-next-line no-eval\n            eval(styledCommands[i]);\n        } catch (error) {\n            console.log(\n                '🚀 ~ file: WeatherIcon.js ~ line 39 ~ WeatherIcon ~ error',\n                error.message\n            );\n        }\n    }\n\n    return (\n        <div>\n            <P P_props={P_props}>\n                <BoldSpan BoldSpan_props={BoldSpan_props}>{temp}℉</BoldSpan>\n            </P>\n\n            <P P_props={P_props}>\n                <BoldSpan BoldSpan_props={BoldSpan_props}>conditions:</BoldSpan>\n                <br />\n                <span>{conditions}</span>\n            </P>\n            <P P_props={P_props}>\n                <BoldSpan BoldSpan_props={BoldSpan_props}>time:</BoldSpan>\n                <span>{time}</span>\n            </P>\n        </div>\n    );\n}\n\nexport default WeatherData;\n","import { StyleContext } from 'App';\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport { getStyledCommands } from 'utils/theme-helper';\n\nconst relativePath = 'src/components/weather/WeatherIcon';\nconst styledComponentNames = ['Icon', 'SecretSection'];\n\nconst Icon = styled.img`\n    width: ${(props) => props.Icon_props['width']};\n    height: ${(props) => props.Icon_props['height']};\n    outline: ${(props) => props.Icon_props['outline']};\n`;\nconst Icon_props = {};\n\nconst SecretSection = styled.section`\n    background-color: ${(props) =>\n        props.SecretSection_props['background-color']};\n    color: ${(props) => props.SecretSection_props['color']};\n    display: ${(props) => props.SecretSection_props['display']};\n`;\nconst SecretSection_props = {};\n\nfunction WeatherIcon(props) {\n    const { styles, themes } = useContext(StyleContext);\n    const styledCommands = getStyledCommands(\n        styles,\n        themes.currentTheme,\n        styledComponentNames,\n        relativePath\n    );\n    for (let i = 0; i < styledCommands.length; i++) {\n        try {\n            // eslint-disable-next-line no-eval\n            eval(styledCommands[i]);\n        } catch (error) {\n            console.error(\n                '🚀 ~ file: WeatherIcon.js ~ line 39 ~ WeatherIcon ~ error',\n                error.message\n            );\n        }\n    }\n\n    return (\n        <>\n            <Icon\n                className=\"components/weather/WeatherIcon.js__Icon\"\n                src={props.img}\n                Icon_props={Icon_props}\n            ></Icon>\n            <SecretSection SecretSection_props={SecretSection_props}>\n                SecretSection\n            </SecretSection>\n        </>\n    );\n}\n\nexport default WeatherIcon;\n","import { StyleContext } from 'App';\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport { getStyledCommands } from 'utils/theme-helper';\n\nconst relativePath = 'src/components/layout/Header';\nconst styledComponentNames = ['HeaderContainer'];\n\nconst HeaderContainer = styled.header`\n    border-radius: ${(props) => props.HeaderContainer_props['border-radius']};\n    border: ${(props) => props.HeaderContainer_props['border']};\n    font-size: ${(props) => props.HeaderContainer_props['font-size']};\n    background-color: ${(props) =>\n        props.HeaderContainer_props['background-color']};\n    padding-top: 10px;\n\n    p {\n        padding: 0px;\n        margin: 0px;\n        font-weight: bold;\n    }\n`;\nconst HeaderContainer_props = {};\n\nfunction Header() {\n    const { styles, themes } = useContext(StyleContext);\n    const styledCommands = getStyledCommands(\n        styles,\n        themes.currentTheme,\n        styledComponentNames,\n        relativePath\n    );\n    for (let i = 0; i < styledCommands.length; i++) {\n        try {\n            // eslint-disable-next-line no-eval\n            eval(styledCommands[i]);\n        } catch (error) {\n            console.error(\n                '🚀 ~ file: WeatherIcon.js ~ line 39 ~ WeatherIcon ~ error',\n                error.message\n            );\n        }\n    }\n\n    return (\n        <HeaderContainer HeaderContainer_props={HeaderContainer_props}>\n            <p>Weather Forecast</p>\n        </HeaderContainer>\n    );\n}\n\nexport default Header;\n","const weatherDataSeed = [\n    {\n        img:\n            'http://res.cloudinary.com/jkeohan/image/upload/v1535732381/day.svg',\n        conditions: ['sunny'],\n        time: 'day',\n        temp: 88,\n    },\n    {\n        img:\n            'http://res.cloudinary.com/jkeohan/image/upload/v1535732381/night.svg',\n        conditions: ['clear'],\n        time: 'day',\n        temp: 66,\n    },\n    {\n        img:\n            'http://res.cloudinary.com/jkeohan/image/upload/v1535732381/stormy.svg',\n        conditions: ['clear'],\n        time: 'day',\n        temp: 42,\n    },\n    {\n        img:\n            'http://res.cloudinary.com/jkeohan/image/upload/v1535732381/cloudy-day_t7ckxp.svg',\n        conditions: ['partly sunny'],\n        time: 'night',\n        temp: 72,\n    },\n    {\n        img:\n            'http://res.cloudinary.com/jkeohan/image/upload/v1535732381/cloudy-night.svg',\n        conditions: ['clear', 'chance rain'],\n        time: 'day',\n        temp: 50,\n    },\n];\n\nmodule.exports = {\n    weatherDataSeed,\n};\n","const styleSeed = [\n    {\n        path: 'src/components/layout/Header',\n        customizableComponents: [\n            {\n                name: 'HeaderContainer',\n                'border-radius': {\n                    default: '0px',\n                    userPreference: null,\n                    themeA: '2rem',\n                    themeB: '4rem',\n                },\n                border: {\n                    default: '2px solid transparent',\n                    userPreference: null,\n                    themeA: '2px solid #a3a52a',\n                    themeB: '2px solid #a52a2a',\n                },\n                'font-size': {\n                    default: '32px',\n                    userPreference: null,\n                    themeA: '16px',\n                    themeB: '48px',\n                },\n                'background-color': {\n                    default: 'transparent',\n                    userPreference: null,\n                    themeA: 'lightgreen',\n                    themeB: 'lightblue',\n                },\n            },\n        ],\n    },\n    {\n        path: 'src/components/weather/WeatherData',\n        customizableComponents: [\n            {\n                name: 'BoldSpan',\n                'padding-right': {\n                    default: '0.5rem',\n                    userPreference: null,\n                    themeA: '4rem',\n                    themeB: '3rem',\n                },\n                color: {\n                    default: 'green',\n                    userPreference: null,\n                    themeB: 'brown',\n                },\n            },\n            {\n                name: 'P',\n                'font-size': {\n                    default: '1rem',\n                    userPreference: null,\n                    themeA: '2rem',\n                    themeB: '1rem',\n                },\n                color: {\n                    default: 'green',\n                    userPreference: null,\n                    themeA: '#e9d30c',\n                    themeB: '#db4444',\n                },\n            },\n        ],\n    },\n    {\n        path: 'src/components/weather/WeatherIcon',\n        customizableComponents: [\n            {\n                name: 'Icon',\n                width: {\n                    default: '2.5rem',\n                    userPreference: null,\n                    themeA: '4rem',\n                    themeB: '3rem',\n                },\n                height: {\n                    default: '2.5rem',\n                    userPreference: null,\n                    themeB: '6rem',\n                },\n                outline: {\n                    default: '0px solid black',\n                    userPreference: null,\n                    themeA: '3px solid #e5ca97',\n                    themeB: '6px solid #d3b402',\n                },\n            },\n            {\n                name: 'SecretSection',\n                color: {\n                    default: 'white',\n                    userPreference: null,\n                    themeA: 'orange',\n                    themeB: 'gold',\n                },\n                'background-color': {\n                    default: 'black',\n                    userPreference: null,\n                    themeB: 'yellow',\n                },\n                display: {\n                    default: 'none',\n                    userPreference: 'visible',\n                },\n            },\n        ],\n    },\n];\n\nconst themeSeed = {\n    currentTheme: 'default',\n    otherThemes: ['userPreference', 'themeA', 'themeB'],\n};\n\nmodule.exports = {\n    styleSeed,\n    themeSeed,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\n//! import the BrowserRouter and assign an alias\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}